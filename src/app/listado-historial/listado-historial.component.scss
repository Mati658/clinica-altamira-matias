.card {
  top: 5%;
  position:relative;
  box-sizing: border-box;
  width: 25%;
  height: 80%;
  background: rgba(217, 217, 217, 0.58);
  border: 1px solid white;
  box-shadow: 12px 17px 51px rgba(0, 0, 0, 0.22);
  backdrop-filter: blur(6px);
  border-radius: 17px;
  text-align: center;
  cursor: pointer;
  transition: all 0.5s;
  // display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  font-weight: bolder;
  color: black;
  left: 8%;
}

.card:hover {
  border: 1px solid black;
  transform: scale(1.05);
}

.card:active {
  transform: scale(0.95) rotateZ(1.7deg);
}


.card p {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


.card-fondo {
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #f2f2f2;
  border-radius: 25px;
  box-shadow: 2px 2px 15px rgb(193, 193, 193);
  overflow-y: auto;
  gap: 10px;
}

thead{
    text-align: center;
}
th{
    text-align: center;
}
td{
    padding: 10px 10px; /* Ajusta estos valores para reducir el espacio vertical */
    text-align: left;
  }





  //===========================================CHECK===========================================
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 1.5rem;
    user-select: none;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    --clr: #0B6E4F;
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #ccc;
    border-radius: 50%;
    transition: 300ms;
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: var(--clr);
    border-radius: .5rem;
    animation: pulse 500ms ease-in-out;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid #E0E0E2;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
  }
  
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 #0B6E4F90;
      rotate: 20deg;
    }
  
    50% {
      rotate: -20deg;
    }
  
    75% {
      box-shadow: 0 0 0 10px #0B6E4F60;
    }
  
    100% {
      box-shadow: 0 0 0 13px #0B6E4F30;
      rotate: 0;
    }
  }





/* From Uiverse.io by cssbuttons-io */ 
button {
  position: absolute;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  touch-action: manipulation;
  width: 90%;
  bottom: 5%;
  left: 5%;
 }
 
 .shadow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: hsl(0deg 0% 0% / 0.25);
  will-change: transform;
  transform: translateY(2px);
  transition: transform
     600ms
     cubic-bezier(.3, .7, .4, 1);
 }
 
 .edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
     to left,
     hsl(340deg 100% 16%) 0%,
     hsl(340deg 100% 32%) 8%,
     hsl(340deg 100% 32%) 92%,
     hsl(340deg 100% 16%) 100%
   );
 }
 
 .front {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  font-size: 1.1rem;
  color: white;
  background: hsl(345deg 100% 47%);
  will-change: transform;
  transform: translateY(-4px);
  transition: transform
     600ms
     cubic-bezier(.3, .7, .4, 1);
 }
 
 button:hover {
  filter: brightness(110%);
 }
 
 button:hover .front {
  transform: translateY(-6px);
  transition: transform
     250ms
     cubic-bezier(.3, .7, .4, 1.5);
 }
 
 button:active .front {
  transform: translateY(-2px);
  transition: transform 34ms;
 }
 
 button:hover .shadow {
  transform: translateY(4px);
  transition: transform
     250ms
     cubic-bezier(.3, .7, .4, 1.5);
 }
 
 button:active .shadow {
  transform: translateY(1px);
  transition: transform 34ms;
 }
 
 button:focus:not(:focus-visible) {
  outline: none;
 }




 .form label {
  position: relative;
  // gap: 10px;
}

.form label .input {
  width: 100%;
  padding: 10px 10px 20px 10px;
  outline: 0;
  border: 1px solid rgba(105, 105, 105, 0.397);
  border-radius: 10px;
}

label .input + span {
  position: absolute;
  left: 10px;
  top: 15px;
  color: grey;
  font-size: 0.9em;
  cursor: text;
  transition: 0.3s ease;
}

label .input:placeholder-shown + span {
  top: 15px;
  font-size: 0.9em;
}

label .input:focus + span,label .input:valid + span {
  top: 30px;
  font-size: 0.7em;
  font-weight: 600;
}

label .input:valid + span {
  color: green;
}
